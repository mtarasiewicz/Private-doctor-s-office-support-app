@using DocHub.Core.Enums.Appointments
@using Microsoft.CodeAnalysis.Elfie.Model.Map
@model DocHub.Core.Domain.Models.Profile
@{
    Layout = "_DashboardLayout";
}
<style>
    .active, .accordion:hover {
      color: rgb(28 100 242 / var(--tw-text-opacity));
    }
</style>
<div class="max-w-lg mx-auto bg-white rounded-md overflow-hidden shadow-md">
    <div class="p-4">
        <h1 class="text-2xl font-semibold mb-4 text-blue-500">Patient</h1>
        <nav class="flex" aria-label="Breadcrumb">
            <ol class="inline-flex items-center space-x-1 md:space-x-3">
                <li class="inline-flex items-center">
                    <a asp-controller="Appointments" asp-action="Index" class="inline-flex items-center text-sm font-medium text-gray-600 hover:text-blue-600 dark:text-gray-400">
                        <svg class="w-[12px] h-[12px] text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 18">
                            <path d="M6.143 0H1.857A1.857 1.857 0 0 0 0 1.857v4.286C0 7.169.831 8 1.857 8h4.286A1.857 1.857 0 0 0 8 6.143V1.857A1.857 1.857 0 0 0 6.143 0Zm10 0h-4.286A1.857 1.857 0 0 0 10 1.857v4.286C10 7.169 10.831 8 11.857 8h4.286A1.857 1.857 0 0 0 18 6.143V1.857A1.857 1.857 0 0 0 16.143 0Zm-10 10H1.857A1.857 1.857 0 0 0 0 11.857v4.286C0 17.169.831 18 1.857 18h4.286A1.857 1.857 0 0 0 8 16.143v-4.286A1.857 1.857 0 0 0 6.143 10Zm10 0h-4.286A1.857 1.857 0 0 0 10 11.857v4.286c0 1.026.831 1.857 1.857 1.857h4.286A1.857 1.857 0 0 0 18 16.143v-4.286A1.857 1.857 0 0 0 16.143 10Z"/>
                        </svg>
                        &nbsp; My patients
                    </a>
                </li>
                <li>
                    <div class="flex items-center">
                        <svg class="w-3 h-3 text-gray-600 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
                        </svg>
                        <p class="ml-1 text-sm font-medium hover:text-blue-700 md:ml-2 text-blue-600">@Model.Patient.FullName</p>
                    </div>
                </li>
            </ol>
        </nav>
        <hr class="bg-gray-50"/>
        <p class="text-gray-700 text-xs font-semibold mt-2">Personal data</p>
        <div class="bg-gray-100 border p-2 rounded-md">
            <div class="flex justify-between">
                <p class="text-gray-600 text-xs font-semibold my-auto">PESEL:</p>
                @if (Model.Patient.PeselNumber is not null)
                {
                    <p class="text-sm my-auto text-gray-700 font-semibold">
                        @Model.Patient.PeselNumber
                    </p>
                }
                else
                {
                    <p class="text-sm my-auto italic text-gray-500">
                        empty
                    </p>
                }
            </div>
            <hr class="border-dashed border border-gray-600"/>
            <div class="flex justify-between">
                <p class="text-gray-600 text-xs font-semibold my-auto">First name & last name:</p>
                <p class="text-sm my-auto text-gray-700 font-semibold">
                    @Model.Patient.FullName
                </p>
            </div>
            <hr class="border-dashed border border-gray-600"/>
            <div class="flex justify-between">
                <p class="text-gray-600 text-xs font-semibold my-auto">Phone number:</p>
                @if (Model.Patient.PhoneNumber is not null)
                {
                    <p class="text-sm my-auto text-gray-700 font-semibold">
                        @Model.Patient.PhoneNumber
                    </p>
                }
                else
                {
                    <p class="text-sm my-auto italic text-gray-500">
                        empty
                    </p>
                }
            </div>
            <hr class="border-dashed border border-gray-600"/>
            <div class="flex justify-between">
                <p class="text-gray-600 text-xs font-semibold my-auto">Email address:</p>
                <p class="text-sm my-auto text-gray-700 font-semibold">
                    @Model.Patient.Email
                </p>
            </div>
            <hr class="border-dashed border border-gray-600"/>
            <div class="flex justify-between">
                <p class="text-gray-600 text-xs font-semibold my-auto">Address:</p>
                <p class="text-sm my-auto text-gray-700 font-semibold">
                    @Model.Patient.Address, @Model.Patient.City, @Model.Patient.PostalCode
                </p>
            </div>
            <hr class="border-dashed border border-gray-600"/>
            <div class="flex justify-between">
                <p class="text-gray-600 text-xs font-semibold my-auto">Date of birth:</p>
                @if (Model.Patient.DateOfBirth is not null)
                {
                    <p class="text-sm my-auto text-gray-700 font-semibold">
                        @Model.Patient.DateOfBirth
                    </p>
                }
                else
                {
                    <p class="text-sm my-auto italic text-gray-500">
                        empty
                    </p>
                }
            </div>

        </div>

        <button class="accordion duration-1000 text-gray-700 text-xs font-semibold mt-2 inline-flex">
            Additional information
            <svg class="w-3 h-3 my-auto text-gray-800" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 9-7 7-7-7"/>
            </svg>
        </button>
        <div class="panel transition-all ease-in-out duration-1000 overflow-hidden bg-gray-100 rounded-md max-h-0">
            <div class="p-2">
                <p class="text-gray-600 text-xs font-semibold">History of diseases:</p>
                @if (Model.Patient.HistoryOfDseases is not null)
                {
                    <p class="text-sm my-auto text-gray-700 font-semibold text-justify">
                        @Model.Patient.HistoryOfDseases
                    </p>
                }
                else
                {
                    <p class="text-sm my-auto italic text-gray-500">
                        empty
                    </p>
                }

                <hr class="border-dashed border border-gray-600"/>
                <p class="text-gray-600 text-xs font-semibold my-auto">Allergies:</p>
                @if (Model.Patient.Allergies is not null)
                {
                    <p class="text-sm my-auto text-gray-700 font-semibold text-justify">
                        @Model.Patient.Allergies
                    </p>
                }
                else
                {
                    <p class="text-sm my-auto italic text-gray-500">
                        empty
                    </p>
                }
                <hr class="border-dashed border border-gray-600"/>
                <p class="text-gray-600 text-xs font-semibold my-auto">Taken medications:</p>
                @if (Model.Patient.TakenMedications is not null)
                {
                    <p class="text-sm my-auto text-gray-700 font-semibold text-justify">
                        @Model.Patient.TakenMedications
                    </p>
                }
                else
                {
                    <p class="text-sm my-auto italic text-gray-500">
                        empty
                    </p>
                }
            </div>
        </div>
        <p class="text-gray-600 text-xs font-semibold my-auto">Appointments:</p>
        <div class="bg-gray-100 border p-2 rounded-md overflow-y-scroll max-h-80 mt-1">
            @if (Model.Appointments is not null)
            {
                foreach (var item in Model.Appointments)
                {
                    @if (item.State is State.Finished)
                    {
                        <div class="w-full mx-auto rounded-md mb-1 p-1">
                            <button class="accordion duration-1000 text-sm text-gray-700 font-semibold inline-flex">
                                @item.Start.Value.ToString("dd.MM.yyyy HH:mm")
                                <svg class="w-3 h-3 my-auto text-gray-800" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 9-7 7-7-7"/>
                                </svg>
                            </button>
                            <div class="panel transition-all ease-in-out duration-1000 overflow-hidden max-h-0">
                                <div class="md:flex justify-between">
                                    <div class="flex-1 mr-1 p-1 hover:bg-yellow-50 rounded-md">
                                        <p class="text-xs font-semibold text-gray-700">Interview: </p>
                                        <p class="text-xs text-justify text-gray-800">@item.Interview</p>
                                    </div>
                                    <div class="flex-1 mr-1 b p-1 hover:bg-yellow-50 rounded-md">
                                        <p class="text-xs font-semibold text-gray-700">Diagnosis: </p>
                                        <p class="text-xs text-justify text-gray-800">@item.Diagnosis</p>
                                    </div>
                                </div>
                                <div class="md:flex justify-between">
                                    <div class="flex-1 mr-1 p-1 hover:bg-yellow-50 rounded-md">
                                        <p class="text-xs font-semibold text-gray-700">Recommendations: </p>
                                        <p class="text-xs text-justify text-gray-800">@item.Recommendations</p>
                                    </div>
                                    <div class="flex-1 mr-1 p-1 hover:bg-yellow-50 rounded-md">
                                        <p class="text-xs font-semibold text-gray-700">Notes: </p>
                                        <p class="text-xs text-justify text-gray-800">@item.Notes</p>
                                    </div>
                                </div>
                            </div>
                            @if (item.Prescriptions != null && item.Prescriptions.Any())
                            {
                                <button class="accordion duration-1000 text-xs text-gray-700 font-semibold inline-flex">
                                    Prescriptions
                                    <svg class="w-3 h-3 my-auto text-gray-800" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 9-7 7-7-7"/>
                                    </svg>
                                </button>
                                <div class="panel transition-all ease-in-out duration-1000 overflow-hidden max-h-0">
                                    @foreach (var p in item.Prescriptions)
                                    {
                                        <div class="rounded-md mb-1">
                                            <div class="leading-tight">
                                                <span class="text-xs text-gray-700 font-semibold">AccessCode: </span>
                                                <span class="text-xs text-gray-700">@p.AccessCode</span>
                                            </div>
                                            <div class="leading-tight">
                                                <span class="text-xs text-gray-700 font-semibold">Information: </span>
                                                <span class="text-xs text-gray-700">@p.Information</span>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            @if (item.Referrals != null && item.Referrals.Any())
                            {
                                <button class="accordion duration-1000 text-xs text-gray-700 font-semibold inline-flex">
                                    Referrals
                                    <svg class="w-3 h-3 my-auto text-gray-800" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 9-7 7-7-7"/>
                                    </svg>
                                </button>
                                <div class="panel transition-all ease-in-out duration-1000 overflow-hidden max-h-0">
                                    @foreach (var p in item.Referrals)
                                    {
                                        <div class="rounded-md mb-1">
                                            <div class="leading-tight">
                                                <span class="text-xs text-gray-700 font-semibold">AccessCode: </span>
                                                <span class="text-xs text-gray-700">@p.AccessCode</span>
                                            </div>
                                            <div class="leading-tight">
                                                <span class="text-xs text-gray-700 font-semibold">Information: </span>
                                                <span class="text-xs text-gray-700">@p.Information</span>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            <hr class="border-dashed border border-gray-600"/>
                        </div>
                    }
                    else if (item is {State: State.Reserved, Finished: null} && item.Start > DateTime.Now)
                    {
                        <div class="w-full mx-auto rounded-md mb-1 p-1">
                            <div class="flex flex-wrap justify-between">
                                <div class="text-sm text-gray-500 font-semibold">@item.Start.Value.ToString("dd.MM.yyyy HH:mm")</div>
                                <span class="inline-flex items-center bg-orange-100 text-orange-800 text-xs font-medium px-2.5 py-0.5 rounded-full">
                                    <span class="w-2 h-2 me-1 bg-gradient-to-r from-orange-400 via-orange-500 to-orange-600 rounded-full"></span>
                                    Incoming
                                </span>
                            </div>
                        </div>
                    }
                    else if (item is { State: State.Reserved,Finished: null } && item.Start < DateTime.Now)
                    {
                        <div class="w-full mx-auto rounded-md mb-1 p-1">
                            <div class="flex flex-wrap justify-between">
                                <div class="text-sm text-gray-500 line-through font-semibold">@item.Start.Value.ToString("dd.MM.yyyy HH:mm")</div>
                                <span class="inline-flex items-center bg-red-100 text-red-800 text-xs font-medium px-2.5 py-0.5 rounded-full">
                                    <span class="w-2 h-2 me-1 bg-gradient-to-r from-red-400 via-red-500 to-red-600 rounded-full"></span>
                                    Missed
                                </span>
                            </div>
                        </div>
                    }
                }
            }
            else
            {
                <p class="text-center text-sm font-semibold text-gray-700">No appointments yet</p>
            }

        </div>
        <div class="flex justify-center mt-2">
            <a asp-action="Index" asp-controller="MyPatients" class="py-2.5 px-5 me-2 mb-2 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-200">Back to my patients</a>
        </div>
    </div>
</div>

@section scripts
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/4.0.0/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/js/accordion.js"></script>
}